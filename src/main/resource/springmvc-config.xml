<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd     
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">
        
    <!-- spring可以自动去扫描base-pack下面的包或者子包下面的java文件，
        如果扫描到有Spring的相关注解的类，则把这些类注册为Spring的bean -->
    <context:component-scan base-package="com.pb.controllerTest"/>
    
    <!-- 可以直接转到相应的页面，而无需通过handler的方法 -->
    <mvc:view-controller path="/success" view-name="sucess"/>
    
    <!-- 注册HandlerMapper、HandlerAdapter两个映射类 -->
     <!-- 启用默认配置  conversion-service用于配置自定义转换器-->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters register-defaults="true">
        	<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- 访问静态资源 -->
    <mvc:default-servlet-handler />
    
    <!-- 配置conversionService 使用ConversionServiceFactoryBean后
    	配置到annotation-driven里面导致默认的format注解无法使用 
    	可使用org.springframework.format.support.FormattingConversionServiceFactoryBean -->
    	<!-- 
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
     -->
     <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="converters">
    		<set>
    			<ref bean="employeeConverter" />
    		</set>
    	</property>
    </bean>
    
    <!-- 配置拦截器 -->
    <mvc:interceptors>
    	<!-- 配置自定义拦截器 -->
    	<bean class="com.ssh.interceptor.FirstInterceptor"></bean>
    </mvc:interceptors>
    
    <!-- 视图解析器  -->
     <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
        <!-- 前缀 -->
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <!-- 后缀 -->
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
    
   <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">  
            <value>10485760</value>  
        </property>  
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
    
    <!-- 配置国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basename" value="i18n" />
    </bean>
        
</beans>